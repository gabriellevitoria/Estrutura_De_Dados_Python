# -*- coding: utf-8 -*-
"""Revisao_Lists_03_Insercao_Remocao.ipynb

Automatically generated by Colaboratory.

# **Revisão de 'list' - Parte 3: Inserção e remoção de elementos**
"""

# 03.1 - Identificação da quantidade atual de elementos da lista
print('03.1 - Identificação da quantidade atual de elementos da lista')
moveis = ['cadeira','sofá','mesa']
print('A lista possui ' + str(len(moveis)) +' elementos: ',end='')
print(moveis)
print('\n')

# 03.2 - Inserção de elemento no final da lista (APPEND - PUSH ou ADD em outras LP)
print('03.2 - Inserção de elemento no final da lista')
moveis = ['cadeira','sofá','mesa']
print('Antes  da inserção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
moveis.append('cama')
print('Depois da inserção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('\n')

# 03.3 - Inserção de elemento em posição qualquer da lista (INSERT - SPLICE ou INSERT_AT em outras LP)
print('03.3 - Inserção de elemento em posição qualquer da lista')
moveis = ['cadeira','sofá','mesa']
print('Antes  da inserção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
moveis.insert(1,'cama')
print('Depois da inserção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('\n')

# 03.4 - Inserção de elementos em uma lista inicialmente vazia
print('03.4 - Inserção de elementos em uma lista inicialmente vazia')
moveis = []
print('Antes  de qualquer inserção :',moveis, ', isto é, ',str(len(moveis)),'elementos')
moveis.append('cama')
moveis.append('mesa')
moveis.append('cadeira')
moveis.append('sofá')
print('Depois de todas as inserções:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('Minha primeira compra foi:',moveis[0])
print('Minha última   compra foi:',moveis[-1])
print('\n')

# 03.5 - Remoção de elemento no final da lista (POP)
print('03.5 - Remoção de elemento no final da lista')
moveis = ['cadeira','sofá','mesa']
print('Antes  da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
removido = moveis.pop()
print('Depois da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('Removido:',removido)
print('\n')

# 03.6 - Remoção de elemento em posição qualquer da lista (usando 'pop') (SPLICE ou REMOVE_AT em outras LP)
print("03.6 - Remoção de elemento em posição qualquer da lista (usando 'pop')")
moveis = ['cadeira','sofá','mesa']
print('Antes  da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('Elemento removido:',moveis.pop(0))
print('Depois da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('\n')

# 03.7 - Remoção de elemento em posição qualquer da lista (usando 'del')
print("03.7 - Remoção de elemento em posição qualquer da lista (usando 'del')")
moveis = ['cadeira','sofá','mesa']
print('Antes  da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
del moveis[1]
print('Depois da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('\n')

# 03.8 - Remoção de elemento da lista com base em seu conteúdo
print('03.8 - Remoção de elemento da lista com base em seu conteúdo')
moveis = ['cadeira','sofá','mesa','sofá']
print('Antes  da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
while 'sofá' in moveis:
    moveis.remove('sofá')
    print('Depois da remoção:',moveis, ', isto é, ',str(len(moveis)),'elementos')
print('\n')